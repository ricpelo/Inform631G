Index: infix.h
===================================================================
RCS file: /cygdrive/c/Temp/Inform6/cvsroot/inform/library/infix.h,v
retrieving revision 1.7
retrieving revision 1.8
diff -u -r1.7 -r1.8
--- infix.h	21 Aug 2004 23:28:31 -0000	1.7
+++ infix.h	31 Aug 2004 07:38:00 -0000	1.8
@@ -46,6 +46,10 @@
 
 [ InfixPrintProperty x;  print (property) x; ];
 
+#Ifdef TARGET_GLULX;
+[ InfixPrintGIProperty x;  print (property) x; ];
+#Endif;
+
 [ InfixPrintGlobal x;    print (string) #global_names_array-->x; ];
 
 [ InfixPrintAction x;    print (string) #action_names_array-->(x-#lowest_action_number); ];
@@ -91,6 +95,9 @@
         if (wa->0 == '~') { wl--; wa++; plus = 100; } ! A tilde
         t = #attribute_names_array;
       InfixPrintProperty:   t = #property_names_array;
+      #Ifdef TARGET_GLULX;
+      InfixPrintGIProperty: t = #identifiers_table-->2;
+      #Endif;
       InfixPrintAction:     t = #action_names_array;
       InfixPrintFakeAction: t = #fake_action_names_array;
       InfixPrintGlobal:     t = #global_names_array;
@@ -161,6 +168,7 @@
             if (wa->0 >= 'a') digit = wa->0 - 'a' + 10;
             else digit = wa->0 - '0';
             dcount++;
+            #Ifdef TARGET_ZCODE;
             switch (base) {
               2:
                 if (dcount == 17) return -1;
@@ -176,6 +184,19 @@
               16:
                 if (dcount == 5) return -1;
             }
+            #Ifnot;
+            switch (base) {
+              2:
+                if (dcount == 33) return -1;
+              10:
+                if (dcount == 11) return -1;
+                if (dcount == 10) {
+                    if (n > 214748363) return -1;
+                }
+              16:
+                if (dcount == 9) return -1;
+            }
+            #Endif;
             if (digit >= 0 && digit < base) n = base*n + digit;
             else return -1;
             wl--; wa++;
@@ -219,9 +240,18 @@
             wn++; return 1; }
 
         infix_term_type = INFIXTT_PROPERTY;
+        #Ifdef TARGET_ZCODE;
         if (InfixMatchPrule(InfixPrintProperty, #lowest_property_number,
             #highest_property_number, wa, wl)) {
             wn++; return 1; }
+        #Ifnot;
+        if (InfixMatchPrule(InfixPrintProperty, #lowest_property_number,
+            #identifiers_table-->1 - 1, wa, wl)) {
+            wn++; return 1; }
+        if (InfixMatchPrule(InfixPrintGIProperty, INDIV_PROP_START,
+            #highest_property_number, wa, wl)) {
+            wn++; return 1; }
+        #Endif;
 
         infix_term_type = INFIXTT_GLOBAL;
         if (InfixMatchPrule(InfixPrintGlobal, #lowest_global_number,
@@ -292,7 +322,7 @@
 ];
 
 [ InfixCheckLineSpaced wa wl i force altered;
-    for (i=1 : i<=parse->1 : i++) {
+    for (i=1 : i<=NumberWords() : i++) {
         wa = WordAddress(i);
         wl = WordLength(i);
         if (wl > 3 && wa->0 == ''' && wa->(wl-1) == ''') {
@@ -306,7 +336,10 @@
             altered = true; break;
         }
     }
-    for (i=WORDSIZE : i<buffer->1 + WORDSIZE : i++) {
+    for (i=WORDSIZE : i<GetKeyBufLength() + WORDSIZE : i++) {
+        #Ifdef TARGET_GLULX;
+        buffer->i = LowerCase(buffer->i);
+        #Endif;
         force = false;
         if (buffer->i == '-' && buffer->(i+1) == '-' && buffer->(i+2) == '>')
             force = true;
@@ -376,7 +409,7 @@
             }
         }
     }
-    for (i=WORDSIZE : i<buffer->1 + WORDSIZE : i++)
+    for (i=WORDSIZE : i<GetKeyBufLength() + WORDSIZE : i++)
         if (buffer->i == '~') { buffer->i = '['; altered = true; }
     return altered;
 ]; ! end of InfixCheckLineSpaced
@@ -692,15 +725,15 @@
 ! ------------------------------------------------------------------------
 
 [ InfixWelcomeSub;
-    print "; Welcome to the ~Infix~ debugger (1/990428), which makes the
+    print "; Welcome to the ~Infix~ debugger (1/040828), which makes the
         following verbs available:^^
         ~; <expression>~: evaluates this Inform expression: e.g.
         ~; location~ will print the value of the variable ~location~,
         ~; 3*5+1~ will print 16, ~; children(old cloth bag)~ will tell you
         how many items are in it. (You can name objects either by their
-        names inside the source code, such as ~n_obj~, or by typing the
+        names inside the source code, such as ~d_obj~, or by typing the
         names by which the game's parser would normally know them, such
-        as ~north wall~: the effect is the same.)^
+        as ~floor~: the effect is the same.)^
         Any expression is allowed except that you can't use double-quoted
         strings of text: but you can send messages, call routines or
         assign values to variables, properties and array entries.
@@ -763,8 +796,17 @@
 ];
 
 [ InfixHex x y;
+    #Ifdef TARGET_ZCODE;
     y = (x & $7f00) / $100;
     if (x < 0) y = y + $80;
+    #Ifnot;
+    y = (x & $7f000000) / $1000000;
+    if (x < 0) y = y + $80;
+    print (Infixhexdigit) y/$10, (Infixhexdigit) y;
+    y = x & $ff0000 / $10000;
+    print (Infixhexdigit) y/$10, (Infixhexdigit) y;
+    y = (x & $ff00) / $100;
+    #Endif;
     x = x & $ff;
     print (Infixhexdigit) y/$10, (Infixhexdigit) y, (Infixhexdigit) x/$10, (Infixhexdigit) x;
 ];
@@ -773,6 +815,10 @@
 
 [ InfixExamineOSub;
     infix_data1 = metaclass(noun);
+    #Ifdef TARGET_GLULX; ! different coding for Glulx
+    if (infix_data1 == Object) infix_data1 = 2;
+    if (infix_data1 == Class) infix_data1 = 1;
+    #Endif;
     infix_term_type = INFIXTT_CONSTANT;
     InfixExamineP(false);
 ];
@@ -800,8 +846,8 @@
             nothing:
                 print "; Constant ", (InfixPrintConstant) infix_parsed_lvalue,
                 " == ", noun, "^";
-            Object: <<Showobj noun>>;
-            Class:
+            2: <<Showobj noun>>;
+            1:
                 print "Class ", (name) noun, "^";
                 objectloop (a ofclass noun) {
                     if (flag) print ", "; else print "Contains: ";
@@ -885,6 +931,7 @@
             " (numbered ", noun, ")^Is not generated by any grammar";
         print "; Action ", (InfixPrintAction) noun,
             " (numbered ", noun, ")^";
+        #Ifdef TARGET_ZCODE;
         w = HDR_DICTIONARY-->0;
         for (b=0 : b<(HDR_DICTIONARY-->0 + 5)-->0 : b++) {
             w = HDR_DICTIONARY-->0 + 7 + b*9;
@@ -901,6 +948,23 @@
                 }
             }
         }
+        #Ifnot;
+        for (b=0 : b < #dictionary_table-->0 : b++) {
+            w = #dictionary_table + WORDSIZE + b*(DICT_WORD_SIZE + 7);
+            if ((w->#dict_par1) & 1) {
+                a = (#grammar_table)-->($100-(w->#dict_par2));
+                lines = a->0; a++;
+                for (: lines>0 : lines--) {
+                    a = UnpackGrammarLine(a);
+                    if (action_to_be == noun) {
+                        print "'", (address) w, "' "; DebugGrammarLine();
+                        new_line;
+                        flag = true;
+                    }
+                }
+            }
+        }
+        #Endif;
         if (flag == 0) "Is not generated by any grammar";
       INFIXTT_SYSFUN:
         if (brief) "; == ", noun;
@@ -1026,13 +1090,11 @@
             }
             if (flag) print (string) tab-->(i-from), " ";
         }
-    new_line;
+        new_line;
 ];
 
 [ InfixInvSub i;
-
-    print (string) Story, (string) Headline;
-    print "  ", (number) #highest_object_number - #lowest_object_number + 1,
+    print (string) Story, (string) Headline;    print "  ", (number) #highest_object_number - #lowest_object_number + 1,
         " objects;^";
 
     print "  non-library object-name constants:";
@@ -1053,10 +1115,18 @@
     InfixList(#lowest_constant_number, #highest_constant_number, #constant_names_array, 0);
 
     print "  (common) properties:";
-    InfixList(#lowest_property_number, 63, #property_names_array);
+    #Ifdef TARGET_ZCODE;
+    InfixList(#lowest_property_number, INDIV_PROP_START-1, #property_names_array);
+    #Ifnot;
+    InfixList(#lowest_property_number, #identifiers_table-->1 - 1, #property_names_array);
+    #Endif;
 
     print "  (individual) properties:";
-    InfixList(64, #highest_property_number, #property_names_array + 126);
+    #Ifdef TARGET_ZCODE;
+    InfixList(INDIV_PROP_START, #highest_property_number, #property_names_array + 126);
+    #Ifnot;
+    InfixList(INDIV_PROP_START, #highest_property_number, #identifiers_table-->2);
+    #Endif;
 
     print "  attributes:";
     InfixList(#lowest_attribute_number, #highest_attribute_number, #attribute_names_array);
